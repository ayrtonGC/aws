AWSTemplateFormatVersion: '2010-09-09'
Resources:
  primeraVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'false'
      EnableDnsHostnames: 'false'
      InstanceTenancy: dedicated
      Tags:
      - Key: Name
        Value: primeraVPC

  publicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: primeraVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: "us-east-1a"
      Tags:
      - Key: Name
        Value: publicSubnet

  privateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: primeraVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "us-east-1a"
      Tags:
      - Key: Name
        Value: privateSubnet

  tablaDeRuteoPrincipal:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: primeraVPC
      Tags:
      - Key: Name
        Value: tablaDeRuteoPrincipal

  rutaSalida:
    Type: AWS::EC2::Route
    DependsOn: miInternetGateway
    Properties:
      RouteTableId:
        Ref: tablaDeRuteoPrincipal
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: miInternetGateway

  miInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: miInternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: primeraVPC
      InternetGatewayId:
        Ref: miInternetGateway

  subnetPublicaATabladeRuteoPrincipal:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: publicSubnet
      RouteTableId:
        Ref: tablaDeRuteoPrincipal

  subnetPrrivadaATabladeRuteoPrincipal:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: privateSubnet
      RouteTableId:
        Ref: tablaDeRuteoPrincipal

  publicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Permite entrada HTTP HTTPS SSH y salida a internet
      VpcId:
        Ref: primeraVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: publicSecurityGroup

  privateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Permite entrada HTTP HTTPS SSH de las instancias del security group publico y salida a Internet
      VpcId:
        Ref: primeraVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: !GetAtt publicSecurityGroup.GroupId
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        SourceSecurityGroupId: !GetAtt publicSecurityGroup.GroupId
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: privateSecurityGroup

  miACLPublica:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: primeraVPC
      Tags:
      - Key: Name
        Value: miACLPublica

  myACLPublicaEntry1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: miACLPublica
      RuleNumber: '100'
      Protocol: "6"
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '80'
        To: '80'

  myACLPublicaEntry2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: miACLPublica
      RuleNumber: '110'
      Protocol: "6"
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '443'
        To: '443'

  myACLPublicaEntry4:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: miACLPublica
      RuleNumber: '100'
      Protocol: "6"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '80'
        To: '80'

  myACLPublicaEntry5:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: miACLPublica
      RuleNumber: '110'
      Protocol: "6"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '443'
        To: '443'

  asociacionSubnetPublicaACLPublico:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: publicSubnet
      NetworkAclId:
        Ref: miACLPublica

  miACLPrivada:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: primeraVPC
      Tags:
      - Key: Name
        Value: miACLPrivada

  myACLPrivadaEntry1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: miACLPrivada
      RuleNumber: '100'
      Protocol: "6"
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 10.0.0.0/24
      PortRange:
        From: '80'
        To: '80'

  myACLPrivadaEntry2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: miACLPrivada
      RuleNumber: '110'
      Protocol: "6"
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 10.0.0.0/24
      PortRange:
        From: '443'
        To: '443'

  myACLPrivadaEntry4:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: miACLPrivada
      RuleNumber: '100'
      Protocol: "6"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '80'
        To: '80'

  myACLPrivadaEntry5:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: miACLPrivada
      RuleNumber: '110'
      Protocol: "6"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '443'
        To: '443'

  asociacionSubnetPrivadaACLPrivada:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: privateSubnet
      NetworkAclId:
        Ref: miACLPrivada
